{"ast":null,"code":"var _jsxFileName = \"/Users/annieren/Documents/GitHub/cleverr-mount-website/cleverr-mount/client/src/components/popup.jsx\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport \"../static/popup.css\";\nimport axios from 'axios';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitForm = event => {\n      event.preventDefault();\n\n      if (this.state.emailValid) {\n        alert(this.state.useremail); // post to database\n\n        axios.post('http://localhost:4000/users.create', this.state.useremail).then(res => {\n          console.log(res.data);\n        }).catch(error => {\n          console.log(error);\n        });\n        this.setState({\n          useremail: ''\n        });\n      } else {\n        alert(\"email is invalid!\");\n      }\n    };\n\n    this.setUserEmail = event => {\n      let name = event.target.name;\n      let value = event.target.value; // this.setState({[nam]: val});\n\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.state = {\n      show: true,\n      useremail: '',\n      emailError: '',\n      emailValid: false\n    };\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.emailError;\n    let emailValid = this.state.emailValid;\n    emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n    fieldValidationErrors = emailValid ? '' : ' is invalid';\n    this.setState({\n      emailError: fieldValidationErrors,\n      emailValid: emailValid\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"popup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Enter your email to get 10% off!\")), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"Your Email:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email-inputbox\",\n      type: \"text\",\n      name: \"useremail\",\n      onChange: this.setUserEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"submit-btn\",\n      type: \"submit\",\n      value: \"Get 10% Off\",\n      onClick: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }))))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Popup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));\nexport default Popup;","map":{"version":3,"sources":["/Users/annieren/Documents/GitHub/cleverr-mount-website/cleverr-mount/client/src/components/popup.jsx"],"names":["Modal","Button","React","ReactDOM","axios","Popup","Component","constructor","props","submitForm","event","preventDefault","state","emailValid","alert","useremail","post","then","res","console","log","data","catch","error","setState","setUserEmail","name","target","value","validateField","show","emailError","handleClose","bind","handleShow","fieldName","fieldValidationErrors","match","render","document","getElementById"],"mappings":"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","sourcesContent":["import { Modal, Button } from \"react-bootstrap\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport \"../static/popup.css\";\nimport axios from 'axios';\n\nclass Popup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: true,\n            useremail: '',\n            emailError: '',\n            emailValid: false\n        };\n        \n        this.handleClose = this.handleClose.bind(this);\n        this.handleShow = this.handleShow.bind(this);\n    }\n    \n    handleClose (){\n        this.setState({ show: false });\n    };\n    \n    handleShow (){\n        this.setState({ show: true });\n    };\n    \n    submitForm = (event) => {\n        event.preventDefault();\n        if(this.state.emailValid){\n            alert(this.state.useremail);\n            // post to database\n            axios.post('http://localhost:4000/users.create', this.state.useremail)\n                .then((res) => {\n                    console.log(res.data)\n                }).catch((error) => {\n                    console.log(error)\n                });\n            this.setState({useremail:''})\n        }else{\n            alert(\"email is invalid!\");\n        }\n    }\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.emailError;\n        let emailValid = this.state.emailValid;\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors = emailValid ? '' : ' is invalid';\n        this.setState({emailError: fieldValidationErrors, emailValid: emailValid});\n    }\n\n    setUserEmail = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        // this.setState({[nam]: val});\n        this.setState({[name]: value}, \n            () => { this.validateField(name, value)});\n    }\n\n    render() {\n        return(\n            <div>\n                {/* <Button variant=\"primary\" onClick={this.handleShow}>Launch modal</Button> */}\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <div id=\"popup\">\n                    <Modal.Header closeButton>\n                        <Modal.Title>Enter your email to get 10% off!</Modal.Title>\n                    </Modal.Header>\n                    <form>\n                    <Modal.Body>\n                        <label>\n                            Your Email: \n                            <input id=\"email-inputbox\" type=\"text\" name=\"useremail\" onChange={this.setUserEmail}/>\n                        </label>\n                        <br></br>\n                        <input id=\"submit-btn\" type=\"submit\" value=\"Get 10% Off\" onClick={this.submitForm}/>\n                    </Modal.Body>\n                    </form>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<Popup />, document.getElementById('root'));\nexport default Popup;"]},"metadata":{},"sourceType":"module"}