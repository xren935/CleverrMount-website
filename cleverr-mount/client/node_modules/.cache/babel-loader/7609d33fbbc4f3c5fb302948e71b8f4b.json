{"ast":null,"code":"var _jsxFileName = \"/Users/annieren/Documents/GitHub/cleverr-mount-website/cleverr-mount/src/components/popup.jsx\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport \"../static/popup.css\";\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitForm = event => {\n      event.preventDefault();\n      alert(\"hiiii\");\n      alert(this.state.useremail);\n    };\n\n    this.setUserEmail = event => {\n      let nam = event.target.name;\n      let val = event.target.value; // this.setState({[nam]: val});\n\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.state = {\n      show: true,\n      useremail: \"\"\n    };\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        break;\n\n      case 'password':\n        passwordValid = value.length >= 6;\n        fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      passwordValid: passwordValid\n    }, this.validateForm);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"popup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \"Enter your email to get 10% off!\")), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Your Email:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"useremail\",\n      onChange: this.setUserEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"Submit\"))))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Popup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));\nexport default Popup;","map":{"version":3,"sources":["/Users/annieren/Documents/GitHub/cleverr-mount-website/cleverr-mount/src/components/popup.jsx"],"names":["Modal","Button","React","ReactDOM","Popup","Component","constructor","props","submitForm","event","preventDefault","alert","state","useremail","setUserEmail","nam","target","name","val","value","setState","validateField","show","handleClose","bind","handleShow","fieldName","fieldValidationErrors","formErrors","emailValid","passwordValid","match","email","length","password","validateForm","render","document","getElementById"],"mappings":"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","sourcesContent":["import { Modal, Button } from \"react-bootstrap\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport \"../static/popup.css\";\n\nclass Popup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: true,\n            useremail: \"\"\n        };\n        \n        this.handleClose = this.handleClose.bind(this);\n        this.handleShow = this.handleShow.bind(this);\n    }\n    \n    handleClose (){\n        this.setState({ show: false });\n    };\n    \n    handleShow (){\n        this.setState({ show: true });\n    };\n    \n    submitForm = (event) => {\n        event.preventDefault();\n        alert(\"hiiii\");\n        alert(this.state.useremail);\n    }\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let emailValid = this.state.emailValid;\n        let passwordValid = this.state.passwordValid;\n      \n        switch(fieldName) {\n          case 'email':\n            emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n            fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n            break;\n          case 'password':\n            passwordValid = value.length >= 6;\n            fieldValidationErrors.password = passwordValid ? '': ' is too short';\n            break;\n          default:\n            break;\n        }\n        this.setState({formErrors: fieldValidationErrors,\n                        emailValid: emailValid,\n                        passwordValid: passwordValid\n                      }, this.validateForm);\n    }\n    \n    setUserEmail = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        // this.setState({[nam]: val});\n        this.setState({[name]: value}, \n            () => { this.validateField(name, value) });\n    }\n\n    render() {\n        return(\n            <div>\n                {/* <Button variant=\"primary\" onClick={this.handleShow}>Launch modal</Button> */}\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <div id=\"popup\">\n                    <Modal.Header closeButton>\n                        <Modal.Title>Enter your email to get 10% off!</Modal.Title>\n                    </Modal.Header>\n                    <form>\n                    <Modal.Body>\n                        <label>\n                            Your Email: \n                            <input type=\"text\" name=\"useremail\" onChange={this.setUserEmail}/>\n                        </label>\n                        <input type=\"submit\" value=\"Submit\" onClick={this.submitForm}/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>Close</Button>\n                        <Button variant=\"primary\">Submit</Button>\n                    </Modal.Footer>\n                    </form>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<Popup />, document.getElementById('root'));\nexport default Popup;"]},"metadata":{},"sourceType":"module"}