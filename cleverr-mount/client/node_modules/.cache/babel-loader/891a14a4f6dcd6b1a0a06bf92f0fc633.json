{"ast":null,"code":"var _jsxFileName = \"/Users/annieren/Documents/GitHub/cleverr-mount-website/cleverr-mount/client/src/components/popup.jsx\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport \"../static/popup.css\";\nimport axios from 'axios';\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.saveEmail = event => {\n      let emailentered = event.target.value;\n      console.log(emailentered);\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let name = event.target.name;\n      let value = event.target.value; // this.setState({[nam]: val});\n      // this.setState({[name]: value}, \n      //     () => { this.validateField(name, value)});\n\n      console.log(\"value\");\n      console.log(value);\n      let emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n\n      if (emailValid != false) {\n        this.setState({\n          emailValid: true\n        });\n      } else {\n        this.setState({\n          emailValid: false\n        });\n      }\n\n      if (this.state.emailValid == true) {\n        alert(\"thanks for signing up!\");\n        this.handleClose();\n      } else {\n        alert(\"email is invalid!\");\n      }\n    };\n\n    this.state = {\n      show: true,\n      useremail: '',\n      emailError: '',\n      emailValid: false,\n      apiResponse: \"\"\n    };\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  // validateField(fieldName, value) {\n  //     let fieldValidationErrors = this.state.emailError;\n  //     let emailValid = this.state.emailValid;\n  //     emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n  //     fieldValidationErrors = emailValid ? '' : ' is invalid';\n  //     this.setState({emailError: fieldValidationErrors, emailValid: emailValid});\n  // }\n  // setUserEmail = (event) => {\n  //     let name = event.target.name;\n  //     let value = event.target.value;\n  //     // this.setState({[nam]: val});\n  //     this.setState({[name]: value}, \n  //         () => { this.validateField(name, value)});\n  // }\n  // fetch API \n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"popup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, \"Sign up with us for 10% off your next purchase!\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      action: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"useremail\",\n      placeholder: \"Enter your email...\",\n      required: true,\n      onChange: this.saveEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Sign up\",\n      style: {\n        marginLeft: \"15px\"\n      },\n      onClick: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Popup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));\nexport default Popup;","map":{"version":3,"sources":["/Users/annieren/Documents/GitHub/cleverr-mount-website/cleverr-mount/client/src/components/popup.jsx"],"names":["Modal","Button","React","ReactDOM","axios","ThemeConsumer","Popup","Component","constructor","props","saveEmail","event","emailentered","target","value","console","log","submitForm","preventDefault","name","emailValid","match","setState","state","alert","handleClose","show","useremail","emailError","apiResponse","bind","handleShow","callAPI","fetch","then","res","text","componentWillMount","render","marginLeft","document","getElementById"],"mappings":"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","sourcesContent":["import { Modal, Button } from \"react-bootstrap\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport \"../static/popup.css\";\nimport axios from 'axios';\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\n\nclass Popup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: true,\n            useremail: '',\n            emailError: '',\n            emailValid: false,\n            apiResponse: \"\"\n        };\n        \n        this.handleClose = this.handleClose.bind(this);\n        this.handleShow = this.handleShow.bind(this);\n    }\n    \n    handleClose (){\n        this.setState({ show: false });\n    };\n    \n    handleShow (){\n        this.setState({ show: true });\n    };\n    \n    saveEmail = (event) => {\n        let emailentered = event.target.value;\n        console.log(emailentered);\n    }\n\n    submitForm = (event) => {\n        event.preventDefault();\n        let name = event.target.name;\n        let value = event.target.value;\n        // this.setState({[nam]: val});\n        // this.setState({[name]: value}, \n        //     () => { this.validateField(name, value)});\n        console.log(\"value\");\n        console.log(value);\n        let emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        if(emailValid != false){\n            this.setState({ emailValid: true});\n        }else{\n            this.setState({ emailValid: false});\n        }\n\n        if(this.state.emailValid == true){\n            alert(\"thanks for signing up!\");\n            this.handleClose(); \n        }else{\n            alert(\"email is invalid!\");\n        }\n    }\n\n    // validateField(fieldName, value) {\n    //     let fieldValidationErrors = this.state.emailError;\n    //     let emailValid = this.state.emailValid;\n    //     emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n    //     fieldValidationErrors = emailValid ? '' : ' is invalid';\n    //     this.setState({emailError: fieldValidationErrors, emailValid: emailValid});\n    // }\n\n    // setUserEmail = (event) => {\n    //     let name = event.target.name;\n    //     let value = event.target.value;\n    //     // this.setState({[nam]: val});\n    //     this.setState({[name]: value}, \n    //         () => { this.validateField(name, value)});\n    // }\n\n    // fetch API \n    callAPI() {\n        fetch(\"http://localhost:9000/testAPI\")\n            .then(res => res.text())\n            .then(res => this.setState({ apiResponse: res }));\n    }\n\n    componentWillMount() {\n        this.callAPI();\n    }\n\n    render() {\n        return(\n            <div>\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <div id=\"popup\">\n                    <Modal.Header closeButton>\n                        <h3>Sign up with us for 10% off your next purchase!</h3>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <form method=\"post\" action=\"/\">\n                            <input type=\"text\" name=\"useremail\" placeholder=\"Enter your email...\" required onChange={this.saveEmail}/>\n                            <input type=\"submit\" value=\"Sign up\" style={{marginLeft: \"15px\"}} onClick={this.submitForm}/>\n                        </form>\n                    </Modal.Body>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<Popup />, document.getElementById('root'));\nexport default Popup;"]},"metadata":{},"sourceType":"module"}